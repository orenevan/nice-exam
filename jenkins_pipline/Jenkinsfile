pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/orenevan/nice-exam/'
            }
        }
        stage('Deploy') {
            steps {
                sh 'cd terraform/webserver '
                sh 'cd terraform/webserver ; terraform init'
                sh 'cd terraform/webserver ; terraform plan '
                sh 'cd terraform/webserver ; terraform apply --auto-approve'
                sh 'sleep 60'
                sh 'cd terraform/webserver ; terraform destroy --auto-approve'

            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
            sh 'cd terraform/webserver ; terraform destroy --auto-approve'
        }
    }
}

                // script {
                //      // Get the Terraform output as JSON
                //     def terraformOutput = sh(script: 'terraform output -json web_server_info', returnStdout: true).trim()

                //     // Parse JSON using Groovy
                //     def jsonSlurper = new groovy.json.JsonSlurper()
                //     def parsedOutput = jsonSlurper.parseText(terraformOutput)

                //     def url  = parsedOutput.public_ip.url 
                //     sleep 60
                //     echo "curl -s $url"
                //     // Use curl to browse to the server and confirm "hello world"
                //     def curlOutput = sh(script: "curl -s $url", returnStdout: true).trim()
                //     if (curlOutput.contains("Hello, World!")) {
                //         echo "Success: Found 'Hello, World!' on the server"
                //         currentBuild.result = 'SUCCESS' // Set the build result to SUCCESS
                //     } else {
                //         echo "Error: Unable to find 'Hello, World!' on the server"
                //         currentBuild.result = 'FAILURE' // Set the build result to FAILURE
                //         error "Failed to find 'Hello, World!' on the server"
                //     }
                // } 
